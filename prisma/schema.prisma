// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())

  fullname        String?
  email           String        @unique
  hashedPassword  String
  // messages        Message[]
  attends         Attend[]
  role            UserRole      @default(ATTENDEE)

  createdAt       DateTime      @default(now()) 
  updatedAt       DateTime      @updatedAt
}

enum UserRole {
  ORGANIZER
  ATTENDEE
}

model Event {
  id              Int           @id @default(autoincrement())

  name            String
  type            String
  location        String
  dateTime        DateTime

  attendees       Attend[]

  createdAt       DateTime      @default(now()) 
  updatedAt       DateTime      @updatedAt
}

model Attend {
  id              Int           @id @default(autoincrement())

  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int
  event           Event         @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId         Int
  
  status          AttendStatus  @default(PENDING)

  isAttended      Boolean       @default(false)

  createdAt       DateTime      @default(now()) 
  updatedAt       DateTime      @updatedAt
}

enum AttendStatus {
  PENDING
  APPROVED
  REJECTED
}

// model Message {
//   id              Int           @id @default(autoincrement())

//   content         String?
//   user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId          Int

//   createdAt       DateTime      @default(now()) 
//   updatedAt       DateTime      @updatedAt
// }